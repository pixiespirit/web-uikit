{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport input from \"../input/input/index.module.css\";\r\nimport s from \"./styles/index.module.css\";\r\nexport const Textarea = (props) => {\r\n    return (_jsxs(\"div\", Object.assign({ style: props.style, className: input.inputWrapper }, { children: [_jsx(\"textarea\", { ref: props.forwardedRef, \r\n                // Value\r\n                defaultValue: props.defaultValue, value: props.value, onChange: (event) => {\r\n                    var _a;\r\n                    (_a = props.setValue) === null || _a === void 0 ? void 0 : _a.call(props, event.currentTarget.value);\r\n                }, \r\n                // Event handlers\r\n                onBlur: props.onBlur, onFocus: props.onFocus, onKeyDown: props.onKeyDown, onKeyPress: props.onKeyPress, onKeyUp: props.onKeyUp, \r\n                // Properties\r\n                id: props.id, className: [input.input, s.textarea].join(' '), readOnly: props.readOnly, disabled: props.disabled, placeholder: \" \", autoFocus: props.autoFocus, \"aria-label\": props['aria-label'], \"aria-labelledby\": props['aria-labelledby'], maxLength: props.maxLength, minLength: props.minLength, required: props.required, autoComplete: props.autoComplete, cols: props.cols, rows: props.rows, form: props.form, name: props.name, spellCheck: props.spellCheck, wrap: props.wrap }, void 0),\r\n            _jsx(\"label\", Object.assign({ className: input.label }, { children: props.label }), void 0)] }), void 0));\r\n};\r\n","references":["/Users/mtosity/projects/web-uikit/core/node_modules/@types/react/index.d.ts"],"dts":{"name":"/Users/mtosity/projects/web-uikit/core/dist/types/textarea/index.d.ts","writeByteOrderMark":false,"text":"import React, { CSSProperties } from 'react';\r\nexport interface TextareaProps {\r\n    defaultValue?: string | number;\r\n    forwardedRef?: React.ForwardedRef<HTMLInputElement>;\r\n    value?: string;\r\n    setValue?: (value: string) => void;\r\n    id?: string;\r\n    readOnly?: boolean;\r\n    label?: string;\r\n    autoComplete?: string;\r\n    autoFocus?: boolean;\r\n    cols?: number;\r\n    rows?: number;\r\n    disabled?: boolean;\r\n    form?: string;\r\n    'aria-label'?: string;\r\n    'aria-labelledby'?: string;\r\n    maxLength?: number;\r\n    minLength?: number;\r\n    name?: string;\r\n    required?: boolean;\r\n    readonly?: boolean;\r\n    spellCheck?: boolean;\r\n    wrap?: string;\r\n    onBlur?: React.FocusEventHandler<HTMLTextAreaElement>;\r\n    onFocus?: React.FocusEventHandler<HTMLTextAreaElement>;\r\n    onKeyPress?: React.KeyboardEventHandler<HTMLTextAreaElement>;\r\n    onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement>;\r\n    onKeyDown?: React.KeyboardEventHandler<HTMLTextAreaElement>;\r\n    onClick?: React.KeyboardEventHandler<HTMLTextAreaElement>;\r\n    className?: string;\r\n    style?: CSSProperties;\r\n}\r\nexport declare const Textarea: React.FC<TextareaProps>;\r\n"}}
