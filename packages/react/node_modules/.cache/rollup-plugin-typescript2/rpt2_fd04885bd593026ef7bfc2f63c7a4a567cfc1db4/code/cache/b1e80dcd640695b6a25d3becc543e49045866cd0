{"code":"import { __rest } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport classNames from 'classnames';\r\nimport { forwardRef } from 'react';\r\nimport styles from './styles/TextBox.module.css';\r\nconst InternalTextBox = (_a, ref) => {\r\n    var { size = 'medium', invalid, iconLeft, iconRight, addonLeft, addonRight, disabled, onClickLeftIcon, onClickRightIcon, onClickLeftAddon, onClickRightAddon } = _a, props = __rest(_a, [\"size\", \"invalid\", \"iconLeft\", \"iconRight\", \"addonLeft\", \"addonRight\", \"disabled\", \"onClickLeftIcon\", \"onClickRightIcon\", \"onClickLeftAddon\", \"onClickRightAddon\"]);\r\n    return (_jsxs(\"div\", Object.assign({ className: classNames(styles.input, styles[size], {\r\n            [styles.invalid]: invalid,\r\n            [styles.disabled]: disabled\r\n        }) }, { children: [addonLeft && (_jsx(\"div\", Object.assign({ className: classNames(styles.addonBefore, styles.addon, onClickLeftAddon && styles.pointer), onClick: onClickLeftAddon }, { children: addonLeft }), void 0)), iconLeft && (_jsx(\"div\", Object.assign({ className: [styles.iconBefore, onClickLeftIcon && styles.pointer].join(' '), onClick: onClickLeftIcon }, { children: iconLeft }), void 0)), _jsx(\"input\", Object.assign({ type: \"text\", ref: ref }, props, { disabled: disabled }), void 0), iconRight && (_jsx(\"div\", Object.assign({ className: [styles.iconAfter, onClickRightIcon && styles.pointer].join(' '), onClick: onClickRightIcon }, { children: iconRight }), void 0)), addonRight && (_jsx(\"div\", Object.assign({ className: classNames(styles.addonAfter, styles.addon), onClick: onClickRightAddon }, { children: addonRight }), void 0))] }), void 0));\r\n};\r\nexport const Textbox = forwardRef(InternalTextBox);\r\n","references":["/Users/mtosity/projects/web-uikit/node_modules/classnames/index.d.ts","/Users/mtosity/projects/web-uikit/node_modules/@types/react/index.d.ts"],"dts":{"name":"/Users/mtosity/projects/web-uikit/packages/react/dist/types/text-box/index.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nexport declare const Textbox: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLInputElement> & Partial<{\r\n    size: 'small' | 'medium' | 'large';\r\n    invalid: boolean;\r\n    addonLeft: JSX.Element | string;\r\n    addonRight: JSX.Element | string;\r\n    iconLeft: JSX.Element | string;\r\n    iconRight: JSX.Element | string;\r\n    disabled?: boolean | undefined;\r\n    onClickLeftIcon?: ((event: React.MouseEvent<HTMLElement>) => void) | undefined;\r\n    onClickRightIcon?: ((event: React.MouseEvent<HTMLElement>) => void) | undefined;\r\n    onClickLeftAddon?: ((event: React.MouseEvent<HTMLElement>) => void) | undefined;\r\n    onClickRightAddon?: ((event: React.MouseEvent<HTMLElement>) => void) | undefined;\r\n}> & React.RefAttributes<HTMLInputElement>>;\r\n"}}
