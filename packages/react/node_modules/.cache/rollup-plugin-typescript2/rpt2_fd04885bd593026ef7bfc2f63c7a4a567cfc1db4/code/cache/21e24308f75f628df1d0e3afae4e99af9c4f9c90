{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport React, { useRef } from 'react';\r\nimport s from \"./styles/modal.module.css\";\r\nexport const Modal = (props) => {\r\n    const modalRef = useRef(null);\r\n    return (_jsx(React.Fragment, { children: props.show && (_jsx(\"div\", Object.assign({ ref: modalRef, className: s.modal, onClick: (event) => {\r\n                var _a;\r\n                if (event.target === modalRef.current) {\r\n                    (_a = props.setShow) === null || _a === void 0 ? void 0 : _a.call(props, !props.show);\r\n                }\r\n            } }, { children: _jsx(\"div\", Object.assign({ className: s.body }, { children: props.children }), void 0) }), void 0)) }, void 0));\r\n};\r\n","references":["/Users/mtosity/projects/web-uikit/node_modules/@types/react/index.d.ts"],"dts":{"name":"/Users/mtosity/projects/web-uikit/packages/react/dist/types/modal/index.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nexport interface ModalProps {\r\n    show?: boolean;\r\n    setShow?: (show: boolean) => void;\r\n    children: React.ReactNode;\r\n}\r\nexport declare const Modal: React.FC<ModalProps>;\r\n"}}
