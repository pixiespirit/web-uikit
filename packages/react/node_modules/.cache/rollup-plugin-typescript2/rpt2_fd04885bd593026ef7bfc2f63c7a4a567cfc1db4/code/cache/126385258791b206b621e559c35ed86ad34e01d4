{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { KindTag } from \"./types\";\r\nimport s from \"./styles/tag.module.css\";\r\nimport primary from \"./styles/primary.module.css\";\r\nimport warning from \"./styles/warning.module.css\";\r\nimport { Label4 } from \"../typography/label\";\r\nconst getClass = (props) => {\r\n    const classes = [s.tag];\r\n    /**\r\n     * Tag kind style\r\n     * Default: primary\r\n     */\r\n    switch (props.kind) {\r\n        case KindTag.WARNING:\r\n            classes.push(warning.root);\r\n            break;\r\n        case KindTag.PRIMARY:\r\n        default:\r\n            classes.push(primary.root);\r\n            break;\r\n    }\r\n    if (props.className)\r\n        classes.push(props.className);\r\n    return classes.join(' ');\r\n};\r\nexport const Tag = (props) => {\r\n    const tagChildren = typeof props.children === 'string' ? _jsx(Label4, { medium: true, children: props.children }, void 0) : props.children;\r\n    return _jsx(\"span\", { style: props.style, className: getClass(props), children: tagChildren }, void 0);\r\n};\r\nexport * from \"./types\";\r\n","references":["/Users/mtosity/projects/web-uikit/node_modules/@types/react/index.d.ts","/Users/mtosity/projects/web-uikit/packages/react/src/tag/types.ts","/Users/mtosity/projects/web-uikit/packages/react/src/typography/label.tsx","/Users/mtosity/projects/web-uikit/packages/react/src/tag/types.ts"],"dts":{"name":"/Users/mtosity/projects/web-uikit/packages/react/dist/types/tag/index.d.ts","writeByteOrderMark":false,"text":"import React, { CSSProperties } from 'react';\r\nimport { KindTag } from \"./types\";\r\nexport interface TagProps {\r\n    children: React.ReactNode;\r\n    className?: string;\r\n    style?: CSSProperties;\r\n    kind?: KindTag;\r\n}\r\nexport declare const Tag: React.FC<TagProps>;\r\nexport * from \"./types\";\r\n"}}
