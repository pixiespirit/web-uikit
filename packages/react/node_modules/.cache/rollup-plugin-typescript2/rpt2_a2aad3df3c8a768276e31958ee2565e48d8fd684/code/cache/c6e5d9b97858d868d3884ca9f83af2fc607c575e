{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport classnames from 'classnames';\r\nimport s from \"./styles/toggle.module.css\";\r\nconst getColorClass = (props) => {\r\n    if (props.disabled) {\r\n        if (props.checked)\r\n            return s.disabledOn;\r\n        return s.disabledOff;\r\n    }\r\n    else {\r\n        if (props.checked)\r\n            return s.on;\r\n        return s.off;\r\n    }\r\n};\r\nexport const Toggle = (props) => {\r\n    return (_jsxs(\"label\", Object.assign({ className: classnames(s.switch, getColorClass(props)) }, { children: [_jsx(\"input\", { type: \"checkbox\", className: s.input, name: props.name, checked: props.checked, onChange: (e) => props.setChecked(e.target.checked), defaultChecked: props.defaultChecked, disabled: props.disabled }, void 0),\r\n            _jsx(\"div\", { className: s.circle }, void 0)] }), void 0));\r\n};\r\n","references":["/Users/mtosity/projects/web-uikit/core/node_modules/classnames/index.d.ts","/Users/mtosity/projects/web-uikit/core/node_modules/@types/react/index.d.ts"],"dts":{"name":"/Users/mtosity/projects/web-uikit/core/dist/types/toggle/index.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nexport interface ToggleProps {\r\n    name?: string;\r\n    disabled?: boolean;\r\n    checked: boolean;\r\n    setChecked: (checked: boolean) => void;\r\n    defaultChecked?: boolean;\r\n}\r\nexport declare const Toggle: (props: ToggleProps) => JSX.Element;\r\n"}}
