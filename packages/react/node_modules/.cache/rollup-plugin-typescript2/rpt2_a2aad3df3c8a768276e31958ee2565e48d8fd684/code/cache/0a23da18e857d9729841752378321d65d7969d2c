{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport s from \"./styles/checkbox.module.css\";\r\nimport { Label3 } from \"../typography/label\";\r\nexport const CheckIcon = () => {\r\n    return (_jsx(\"svg\", Object.assign({ className: s.checkIcon, width: \"1em\", height: \"1em\", viewBox: \"0 0 14 10\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" }, { children: _jsx(\"path\", { fill: \"white\", d: \"M12.4739 0.346983C12.6545 0.15247 12.9557 0.132996 13.1598 0.302625L13.588 0.658342C13.8106 0.843311 13.8302 1.17809 13.6306 1.38771L5.82127 9.58933C5.63644 9.78344 5.33143 9.79728 5.12978 9.62071L0.494688 5.5622C0.28929 5.38235 0.266125 5.071 0.442649 4.86273L0.841462 4.39221C1.02346 4.17749 1.34677 4.15525 1.55646 4.34304L5.34481 7.73586C5.42604 7.80862 5.55059 7.80288 5.6248 7.72297L12.4739 0.346983Z\" }, void 0) }), void 0));\r\n};\r\nexport const Checkbox = (props) => {\r\n    return (_jsxs(\"label\", Object.assign({ className: s.container }, { children: [_jsx(\"input\", { type: \"checkbox\", className: s.input, disabled: props.disabled, \r\n                // Uncontrolled\r\n                defaultChecked: props.defaultChecked, \r\n                // Controlled\r\n                checked: props.checked, onChange: (e) => { var _a; return (_a = props.setChecked) === null || _a === void 0 ? void 0 : _a.call(props, e.target.checked); } }, void 0),\r\n            _jsx(\"span\", Object.assign({ className: s.checkboxCheck }, { children: _jsx(CheckIcon, {}, void 0) }), void 0),\r\n            _jsx(Label3, Object.assign({ medium: true, className: s.label }, { children: props.children }), void 0)] }), void 0));\r\n};\r\n","references":["/Users/mtosity/projects/web-uikit/core/node_modules/@types/react/index.d.ts","/Users/mtosity/projects/web-uikit/core/src/typography/label.tsx"],"dts":{"name":"/Users/mtosity/projects/web-uikit/core/dist/types/checkbox/index.d.ts","writeByteOrderMark":false,"text":"import React, { CSSProperties } from 'react';\r\nexport interface CheckboxProps {\r\n    checked?: boolean;\r\n    disabled?: boolean;\r\n    defaultChecked?: boolean;\r\n    setChecked?: (checked: boolean) => void;\r\n    style?: CSSProperties;\r\n    children?: React.ReactNode;\r\n}\r\nexport declare const CheckIcon: React.FC;\r\nexport declare const Checkbox: React.FC<CheckboxProps>;\r\n"}}
