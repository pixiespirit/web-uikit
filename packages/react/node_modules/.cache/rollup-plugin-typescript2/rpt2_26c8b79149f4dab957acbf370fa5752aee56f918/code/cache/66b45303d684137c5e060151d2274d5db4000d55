{"code":"import { __rest } from \"tslib\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport s from './index.module.css';\r\nimport { cx } from \"../../utils/dom\";\r\nimport { forwardRef } from 'react';\r\nexport const InputElement = forwardRef((props, ref) => {\r\n    const { placement = 'left', className } = props, rest = __rest(props, [\"placement\", \"className\"]);\r\n    const attr = placement === 'left' ? 'insetStart' : 'insetEnd';\r\n    const _className = cx(s.absolute, s.centerItem, s[attr], className, (props === null || props === void 0 ? void 0 : props.onClick) ? s.cursorPointer : '');\r\n    return _jsx(\"div\", Object.assign({ className: _className, ref: ref }, rest), void 0);\r\n});\r\nInputElement.id = 'InputElement';\r\nexport const InputLeftIcon = forwardRef((props, ref) => {\r\n    return _jsx(InputElement, Object.assign({ ref: ref, placement: \"left\" }, props), void 0);\r\n});\r\nInputLeftIcon.id = 'InputLeftIcon';\r\nexport const InputRightIcon = forwardRef((props, ref) => {\r\n    return _jsx(InputElement, Object.assign({ ref: ref, placement: \"right\" }, props), void 0);\r\n});\r\nInputRightIcon.id = 'InputRightIcon';\r\n","references":["/Users/mtosity/projects/web-uikit/design-system-v3/packages/react/src/utils/dom.ts","/Users/mtosity/projects/web-uikit/design-system-v3/node_modules/@types/react/index.d.ts","/Users/mtosity/projects/web-uikit/design-system-v3/packages/react/src/input/types.ts"],"dts":{"name":"/Users/mtosity/projects/web-uikit/design-system-v3/packages/react/dist/types/input/input-element/index.d.ts","writeByteOrderMark":false,"text":"import { ForwardedRef, HTMLAttributes } from 'react';\r\nimport { SFC } from \"../types\";\r\nexport interface InputElementProps extends HTMLAttributes<HTMLDivElement> {\r\n    placement?: 'left' | 'right';\r\n    className?: string;\r\n    ref?: ForwardedRef<HTMLDivElement>;\r\n}\r\nexport declare const InputElement: SFC<InputElementProps>;\r\nexport declare const InputLeftIcon: SFC<InputElementProps>;\r\nexport declare const InputRightIcon: SFC<InputElementProps>;\r\n"}}
