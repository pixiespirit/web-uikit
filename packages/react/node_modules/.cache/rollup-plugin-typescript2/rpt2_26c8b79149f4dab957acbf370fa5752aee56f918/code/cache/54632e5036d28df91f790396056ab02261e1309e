{"code":"import chunks from 'lodash.chunk';\r\nimport { isSameDate, toDateMonthYear } from \"./date-utils\";\r\nexport const getAllDateOfMonth = (date) => {\r\n    const [, month, year] = toDateMonthYear(date);\r\n    const dates = [];\r\n    const currentDate = new Date(year, month, 1, 0, 0, 0, 0);\r\n    while (currentDate.getMonth() === month) {\r\n        dates.push(new Date(currentDate));\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n    return dates;\r\n};\r\nexport const includesDate = (dates, date) => {\r\n    return !!dates && dates.some((shouldBeHighlight) => isSameDate(shouldBeHighlight, date));\r\n};\r\nexport const toCalendarMatrix = (dates) => {\r\n    if (dates.length === 0) {\r\n        return [];\r\n    }\r\n    const calendar = [];\r\n    // We will have slots which is belonged to the previous month\r\n    // Then, the calendar should be offsetted by that slots with undefined\r\n    const firstDateOfMonth = dates[0];\r\n    for (let i = 0; i < firstDateOfMonth.getDay(); i++) {\r\n        calendar.push(undefined);\r\n    }\r\n    // Add dates to calendar matrix\r\n    calendar.push(...dates);\r\n    // Now, the matrix is currently flat, it should be split into chunks, each\r\n    // chunk contains 7 days\r\n    const calendarMatrix = chunks(calendar, 7);\r\n    // The calendar matrix is required to be filled fully\r\n    // To that, the last row should be filled\r\n    const nRows = calendarMatrix.length;\r\n    calendarMatrix[nRows - 1].push(...new Array(7 - calendarMatrix[nRows - 1].length).fill(undefined));\r\n    return calendarMatrix;\r\n};\r\n","references":["/Users/mtosity/projects/web-uikit/design-system-v3/node_modules/@types/lodash.chunk/index.d.ts","/Users/mtosity/projects/web-uikit/design-system-v3/packages/react/src/calendar/date-utils.ts"],"dts":{"name":"/Users/mtosity/projects/web-uikit/design-system-v3/packages/react/dist/types/calendar/utils.d.ts","writeByteOrderMark":false,"text":"export declare const getAllDateOfMonth: (date: Date) => Array<Date>;\r\nexport declare const includesDate: (dates: Array<Date> | undefined, date: Date) => boolean;\r\nexport declare const toCalendarMatrix: (dates: Array<Date>) => Array<Array<Date | undefined>>;\r\n"}}
